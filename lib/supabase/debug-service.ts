import { supabase } from "./client"

export class SupabaseDebugService {
  async testPermissions() {
    console.log("üîç Testando permiss√µes do Supabase...")

    try {
      // Testar leitura de usu√°rios
      const { data: users, error: readError } = await supabase.from("users").select("id, name, email").limit(1)

      if (readError) {
        console.error("‚ùå Erro ao ler usu√°rios:", readError)
        return { canRead: false, canWrite: false, canDelete: false, error: readError }
      }

      console.log("‚úÖ Leitura de usu√°rios: OK")

      // Testar cria√ß√£o (inser√ß√£o)
      const testUser = {
        name: "Teste Delete",
        email: `teste-delete-${Date.now()}@test.com`,
        whatsapp: "11999999999",
      }

      const { data: newUser, error: createError } = await supabase.from("users").insert([testUser]).select().single()

      if (createError) {
        console.error("‚ùå Erro ao criar usu√°rio de teste:", createError)
        return { canRead: true, canWrite: false, canDelete: false, error: createError }
      }

      console.log("‚úÖ Cria√ß√£o de usu√°rio: OK", newUser)

      // Testar exclus√£o
      const { error: deleteError } = await supabase.from("users").delete().eq("id", newUser.id)

      if (deleteError) {
        console.error("‚ùå Erro ao excluir usu√°rio de teste:", deleteError)
        return { canRead: true, canWrite: true, canDelete: false, error: deleteError }
      }

      console.log("‚úÖ Exclus√£o de usu√°rio: OK")

      return { canRead: true, canWrite: true, canDelete: true, error: null }
    } catch (error) {
      console.error("‚ùå Erro geral no teste de permiss√µes:", error)
      return { canRead: false, canWrite: false, canDelete: false, error }
    }
  }

  async checkRLS() {
    console.log("üîç Verificando RLS (Row Level Security)...")

    try {
      // Verificar se RLS est√° habilitado
      const { data, error } = await supabase.rpc("check_rls_status")

      if (error) {
        console.log("‚ö†Ô∏è N√£o foi poss√≠vel verificar RLS automaticamente")
        return null
      }

      return data
    } catch (error) {
      console.log("‚ö†Ô∏è Fun√ß√£o RLS n√£o dispon√≠vel")
      return null
    }
  }
}
